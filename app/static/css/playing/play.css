main {
    /* --clr-bg: rgb(180, 90, 160); */
    --clr-bg: rgb(255, 255, 255);
    display: flex;
    align-items: center;
    justify-content: center;
}

.container::before {
    content: "";
    position: absolute;
    inset: 0;
    z-index: -1;

    display: block; 
  

    -webkit-filter: blur(15px);
    -moz-filter: blur(15px);
    -o-filter: blur(15px);
    -ms-filter: blur(15px);
    filter: blur(15px);
}

.container {
    width: 100%;
    height: 70vh;
    padding: 1rem;
    overflow: auto;
    position: relative;

    display: grid;
    align-items: center;
    justify-items: center;
    gap: 1rem;

    box-sizing: border-box;
}

.container > * {
    margin: 0 auto;
    text-align: center;
    width: 100%;
    height: 100%;
}


/* FOR SETUP DIV */

#setup {
    /* height: calc(100% - var(--header-height) - 1px - 1px - var(--footer-height) - 6rem); */
    gap: 3rem;
    /* padding: 3rem; */
    grid:
        "exit   .       heading heading heading .       startG"  max-content
        ".      first   .       .       .       second  ."  2fr
        "pickP  pickP   pickP   .       chooseD chooseD chooseD"  max-content
        "prof   prof    prof    .       dream   dream   dream"  5fr
        ".      .       error   error   error   .       ."  3rem
        / 2fr    2fr     2fr     0.5fr   2fr     2fr     2fr;
}

#exit {
    grid-area: exit;
    display: flex;
    align-items: center;
    justify-content: center;
}

#start {
    grid-area: startG;
    display: flex;
    align-items: center;
    justify-content: center;
}

#first {
    grid-area: first;
    font-size: 5rem;
    display: flex;
    align-items: center;
    justify-content: center;
}

#second {
    grid-area: second;
    font-size: 5rem;
    display: flex;
    align-items: center;
    justify-content: center;
}

#heading {
    grid-area: heading;
}

#pickProfession {
    grid-area: pickP;
}

#profession {
    grid-area: prof;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
}

#profHeading {
    align-self: flex-start;

    display: block;
    width: 100%;
}

#chooseDream {
    grid-area: chooseD;
}

#dream {
    grid-area: dream;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
}

#dreamHeading {
    align-self: flex-start;

    display: block;
    width: 100%;
}

#error {
    grid-area: error;
    background-color: white;
    font-weight: 600;

    display: flex;
    align-items: center;
    justify-content: center;
}


h1 {
    font-size: 3rem;
}



/* FOR GAME DIV */

#progressBarOuter {
    width: 100%;
    height: 30%;
    padding: 0 1px;
    background-color: white;
    border-radius: 20px;

    display: flex;
    align-items: center;
    justify-content: flex-start;
}

#progressBarInner {
    width: 1%;
    height: 90%;
    background-color: var(--clr-yellow);
    border-radius: 20px;
}


.box {
    background-color: var(--clr-bg);
    border-radius: 2px;
    box-shadow: 0px 0px 5px 0 rgba(0, 0, 0, 0.3);

    box-sizing: border-box;
    padding: 5px;


    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
}

h3 {
    width: 100%;
    font-size: 1.1rem;
}

span {
    font-size: 1.1rem;
}

p {
    margin: 0;
}

.gameBtn {
    font-size: 1em;
    background-color: var(--clr-yellow);
}

.sign {
    font-size: 1.1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
}

.headWithHR {
    align-self: flex-start;

    width: 100%;

    display: flex;
    align-items: center;
    justify-content: space-evenly;
    flex-wrap: wrap;
}

hr.divider {
    align-self: flex-start;

    width: 100%;
    margin: 0;
}

.ListElement {
    width: 100%;
    height: fit-content;
    margin: 5px;
    font-size: 0.9rem;

    display: flex;
    align-items: center;
    justify-content: space-between;
}

.ListElementName {
    text-align: left;
}

.flexListBox {
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    justify-content: flex-start;
}

.flexList {
    width: 100%;
    flex: 1 1 0px;
    overflow-x: hidden;
    overflow-y: auto;
}


#game {
    /* min-height: calc(100% - var(--header-height) - 1px - 1px - var(--footer-height)); */
    /* padding: 1rem; */
    grid:
        "exitGame    .   headingGame headingGame headingGame       .       newGame"  max-content
        ".       .       .       .       .       .       ."  max-content
        "cashflowTotal progressDiv progressDiv progressDiv progressDiv progressDiv expensesTop"  1fr
        "cashflow assets assets     ledger liabilities liabilities   expenses"  6fr
        "incomePlus    .       .       .       .       .          expenses"  max-content
        "salary marketAction marketAction Pay   Downsized Doodad     expenses"  0.5fr
        "salary        Buy   Sell      Collect   TakeOut   PayOff     expenses"  0.5fr
        "incomeEqual   .       .        topArrow   .       .          expensesEqual" max-content
        "totalIncome leftArrow leftArrow payday rightArrow rightArrow expensesBottom"  1fr
        / 2fr     2fr     2fr     2fr     2fr     2fr     2fr;
}   

#exitGame {
    grid-area: exitGame;
    display: flex;
    align-items: center;
    justify-content: center;
}

#newGame {
    grid-area: newGame;
    display: flex;
    align-items: center;
    justify-content: center;
}

#headingGame {
    grid-area: headingGame;
    font-size: 2.7rem;
}

#progress {
    grid-area: progressDiv;
}

#cashflowTotal {
    grid-area: cashflowTotal;
}

#cashflow {
    grid-area: cashflow;
}

#incomePlus {
    grid-area: incomePlus;
    font-size: 1.5rem;
}

#salary {
    grid-area: salary;
}

#incomeEqual {
    grid-area: incomeEqual;
    font-size: 1.5rem;
}

#totalIncome {
    grid-area: totalIncome;
}

#expensesTop {
    grid-area: expensesTop;

}
#expenses {
    grid-area: expenses;

}
#expensesEqual {
    grid-area: expensesEqual;
    font-size: 1.5rem;

}
#expensesBottom {
    grid-area: expensesBottom;

}

#assets {
    grid-area: assets;
}

#ledger {
    grid-area: ledger;
}

#cash {
    font-weight: bold;
}

#liabilities {
    grid-area: liabilities;
}

#marketAction {
    grid-area: marketAction;
}

#Buy {
    grid-area: Buy;
}

#Sell {
    grid-area: Sell;
}

#Pay {
    grid-area: Pay;
}

#Collect {
    grid-area: Collect;
}

#Downsized {
    grid-area: Downsized;
}

#Doodad {
    grid-area: Doodad;
}

#TakeOut {
    grid-area: TakeOut;
}

#PayOff {
    grid-area: PayOff;
}

#leftArrow {
    grid-area: leftArrow;
}

#rightArrow {
    grid-area: rightArrow;
}

#topArrow {
    grid-area: topArrow;
    justify-content: space-evenly;
}

#payday {
    grid-area: payday;
}

/* ------- LOAN DIV ---------- */

#popupContainerBG {
    position: absolute;
    inset: 0;
    z-index: 1;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.65);

    display: flex;
    align-items: center;
    justify-content: center;
}

.popupContainer {
    position: relative;

    width: 500px;

    display: flex;
    flex-flow: column wrap;
    align-items: center;
    justify-content: center;

    padding: 3rem;
    border: 2px solid white;
    background-color: rgb(39, 39, 39);
}

#cancelButton {
    position: absolute;
    z-index: 2;
    right: 1rem;
    top: 1rem;
    height: 2rem;
    aspect-ratio: 1 / 1;
    background-image: url("../../images/cancel-dark.png");
    background-size: contain;
    background-repeat: no-repeat;
    border-radius: 0;
}

#cancelButton:hover {
    cursor: pointer;
    box-shadow: inset var(--shadow-black);
}

#loanDescription {
    text-align: center;
}

.loan-p {
    width: 100%;
    margin-top: 1em;
}

#loan_amount {
    margin: 1em 0;
}

#loanEffects {
    flex: none;
    overflow: unset;
}

.popupButton {
    width: 100%;
    margin-top: 1em;
}


@media (prefers-color-scheme: dark) {
    main {
        --clr-bg: rgba(255, 255, 255, 0.08);
    }

    #cancelButton {
        background-image: url("../../images/cancel-light.png");
    }
}


@media (max-height: 1000px) {
    .sign {
        font-size: 1.2rem;
    }
}